üîç Cos'√® lock.newCondition()?
lock.newCondition() serve per creare una condizione di attesa/risveglio legata a un oggetto Lock.

√à analogo a wait() / notify() dei monitor classici (synchronized), ma pi√π flessibile e potente.

Sintassi:
java
Copia
Modifica
Condition condizione = lock.newCondition();
‚úÖ A cosa serve?
Con Condition, puoi far attendere un thread finch√© una certa condizione non √® vera, e risvegliarlo in seguito.

Esempio:
java
Copia
Modifica
Lock lock = new ReentrantLock();
Condition spazioDisponibile = lock.newCondition();

// produttore
lock.lock();
try {
    while (!possoScrivere()) {
        spazioDisponibile.await(); // aspetta che ci sia spazio
    }
    // scrivi nel buffer
    spazioDisponibile.signal(); // sveglia eventuali consumatori
} finally {
    lock.unlock();
}
üì¶ Metodi principali di Condition
Metodo	Significato
await()	Il thread si blocca finch√© non viene risvegliato
signal()	Risveglia un solo thread in attesa su quella Condition
signalAll()	Risveglia tutti i thread in attesa

üîí Importante: tutti questi metodi vanno usati dentro un blocco lock.lock() / unlock().

üîÅ Confronto: synchronized vs Lock + Condition
Feature	synchronized + wait/notify	Lock + Condition
Una sola condition	this.wait()	Pi√π Condition indipendenti
Maggiore flessibilit√†	‚ùå	‚úÖ
Interruzione	Meno controllabile	Pi√π gestibile (InterruptedException)
Leggibilit√†	Pi√π semplice	Pi√π esplicito e robusto
