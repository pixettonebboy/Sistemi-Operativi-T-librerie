Achille Pisani
Librerie di Sistemi Operativi T


------------------------------------------------------------LETTURA FILE BINARIO------------------------------------------------------------


#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>

/*
Usage: leggi_binario Fbin
Utility per controllare il contenuto di un file binario Fbin.
Legge uno ad uno gli interi contenuti nel file binario passato 
come parametro e li stampa a video.
*/
int main(int argc, char* argv[]) {

    int fd,n, num;

    /*controllo parametri in ingresso*/
    if ( argc != 2 ) {
        perror("Numero di parametri non valido.");
        exit(EXIT_FAILURE);
    }

    //apertura del file Fin
    fd=open(argv[1], O_RDONLY);
    if(fd < 0){
        perror("Errore nell'apertura del file binario.\n");
        exit(EXIT_FAILURE);
    }
    printf("Contenuto del file: \n");
    while((n = read(fd, &num, sizeof(int))) > 0) {
        printf("%d ",num);
    }
    printf("\n");

    //chiusura dei file
    close(fd);
}









------------------------------------------------------------SCRITTURA FILE BINARIO------------------------------------------------------------



#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

#define dims 25

int main(int argc, char **argv)
{
int VAR, k;
int fd;
char buff[dims]="";

if (argc != 2)
{	printf("numero argomenti errato!\n");
	exit(-1);
}
fd=creat(argv[1], 0777);
if (fd<0)
{	perror("errore nella creat");
	exit(-2);
}
printf("immetti una sequenza di interi (uno per riga), terminata da ^D:\n"); // cntrl+D fornisce lâ€™EOF a stdin
while ((k=read(0, buff, dims))>0)
{	VAR=atoi(buff);
	write(fd,&VAR, sizeof(int));
}
close(fd);
}

